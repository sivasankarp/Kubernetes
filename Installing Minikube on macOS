how to install the latest Minikube release on macOS with VirtualBox v7.0 specifically. This installation assumes no other isolation software is installed on our Mac workstation, such as HyperKit, VMware Fusion, Parallels, QEMU or Docker Engine, that Minikube can use as a driver.

NOTE: For other VirtualBox and Minikube versions the installation steps may vary! Check the Minikube installation!

Verify the virtualization support on your macOS in a terminal (VMX in the output indicates enabled virtualization):

$ sysctl -a | grep -E --color 'machdep.cpu.features|VMX'

Install the VirtualBox hypervisor for 'OS X hosts'. Download and install the .dmg package.

Install Minikube. We can download and install in a terminal the latest release or a specific release from the Minikube release page:

$ curl -LO \
  https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64

$ sudo install minikube-darwin-amd64 /usr/local/bin/minikube

NOTE: Replacing /latest/ with a particular version, such as /v1.27.1/ will download that specified version.

Start Minikube. We can start Minikube with the minikube start command, which bootstraps a single-node cluster with the latest stable Kubernetes version release. For a specific Kubernetes version the --kubernetes-version option can be used as such minikube start --kubernetes-version v1.25.1 (where latest is default and acceptable version value, and stable is also acceptable). More advanced start options will be explored later in this chapter:

$ minikube start

😄 minikube v1.28.0 on Darwin 12.3
✨ Automatically selected the virtualbox driver
💿 Downloading VM boot image ...
👍 Starting control plane node minikube in cluster minikube
💾 Downloading Kubernetes v1.25.3 preload ...
🔥 Creating virtualbox VM (CPUs=2, Memory=6000MB, Disk=20000MB) ...
🐳 Preparing Kubernetes v1.25.3 on Docker 20.10.20 ...
🔎 Verifying Kubernetes components...
🌟 Enabled addons: default-storageclass, storage-provisioner
💡 kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
🏄 Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

NOTE: An error message that reads "Unable to pick a default driver..." means that Minikube was not able to locate any one of the supported hypervisors or runtimes. The recommendation is to re-install a desired isolation tool, and ensure its executable is found in the default PATH of your OS.

Check the status. With the minikube status command, we display the status of the Minikube cluster:

$ minikube status

minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured 

Stop Minikube. With the minikube stop command, we can stop Minikube:

$ minikube stop

✋  Stopping node "minikube"  ...
🛑  1 nodes stopped.
